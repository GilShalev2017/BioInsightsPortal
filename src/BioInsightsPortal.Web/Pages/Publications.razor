@page "/publications"
@using BioInsightsPortal.Web.Data
@inject BioInsightsService BioInsightsService

<PageTitle>Publications</PageTitle>

<h2 class="text-2xl font-bold mb-4 text-gray-800">Publications</h2>
<p class="mb-4 text-gray-600">A list of publications from our knowledge base.</p>

@if (publications == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="min-w-full divide-y divide-gray-200 shadow-md rounded-lg overflow-hidden">
        <thead class="bg-gray-50">
            <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">PubMed ID</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Year</th>
            </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
            @foreach (var publication in publications)
            {
                <tr>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@publication.PubMedId</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@publication.Title</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@(publication.Year.HasValue? publication.Year.Value.ToString() : "N/A")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<BioInsightsService.Publication>? publications;

    protected override async Task OnInitializedAsync()
    {
        publications = await BioInsightsService.GetPublicationsAsync();
    }
}
